#!/bin/sh
#
# An example hook script to verify what is about to be committed.
# Called by "git commit" with no arguments.  The hook should
# exit with non-zero status after issuing an appropriate message if
# it wants to stop the commit.
#
# To enable this hook, rename this file to "pre-commit".

# Redirect output to stderr.
exec 1>&2

info()
{
    echo "pre-commit:" "$@"
    echo "pre-commit:" "$@" >> /tmp/pre-commit.log
}

name="$(/bin/basename "$(pwd)")"

if [ -e "notebook.zim" ]
then
    info "notebook.zim exists. Assuming this is a zim notebook"

    template="Default"
    template="Default_with_index"

    # html export
    if [ -d docs ]
    then
        info "docs folder exists, generating html in docs folder ..."
        /bin/rm -rf docs
        info "cleaning html $?"

        info /usr/bin/zim --export -r --output=./docs --format=html --template $template --index index "../$name"
        /usr/bin/zim --export -r --output=./docs --format=html --template $template --index index "../$name"
        info "generate html docs $?"

        git add docs
        info "git add html docs $?"
    else
        info "docs folder does not exists, not generating html."
    fi

    # markdown export
    /bin/find . -name '*.md' -exec /bin/rm {} \;
    info "clean out old md files $?"

    [ -d markdown ] && /bin/rm -rf markdown
    info "clean out markdown folder $?"

    info /usr/bin/zim --export -r --output=markdown --format=markdown --index index "../$name"
    /usr/bin/zim --export -r --output=markdown --format=markdown --index index "../$name"
    info "export to md $?"

    if cd markdown
    then
        info "cd to markdown export dir $?"

        /bin/find . -name '*.md' -exec /bin/mv {} ../{} \;
        info "find and move md files $?"

        cd ..
        info "cd back up $?"
    fi
    info "move exported md files $? $(pwd)"

    [ -d markdown ] && echo /bin/rm -rf markdown
    info "clean out markdown folder $?"

    # process readme file
    readme="readme.md"
    [ -e "README.md" ] && readme="README.md" 
    if [ -e "$readme" -a -e index.md ]
    then
        echo >> "$readme"
        /bin/cat index.md >> "$readme"
        /bin/rm index.md
        info "generate $readme from index.md $?"

    elif [ -e index.md ]
    then
        /bin/mv index.md readme.md
        info "rename index.md to readme.md $?"
    else
        info "no index.md found"
    fi
fi

#git add '*.md'
info "git add all md files $?"

