#!/bin/sh
#
# An example hook script to verify what is about to be committed.
# Called by "git commit" with no arguments.  The hook should
# exit with non-zero status after issuing an appropriate message if
# it wants to stop the commit.
#
# To enable this hook, rename this file to "pre-commit".

# Redirect output to stderr.
exec 1>&2

info()
{
    echo "pre-commit:" "$@"
}

name="$(/bin/basename "$(pwd)")"

[ -d docs ] && /bin/rm -rf docs
info "cleaning html $?"

/usr/bin/zim --export -r --output=./docs --format=html --index index "../$name"
info "generate html docs $?"

git add docs
info "git add html docs $?"

/bin/find . -name '*.md' -exec /bin/rm {} \;
info "clean out old md files $?"

[ -d markdown ] && /bin/rm -rf markdown
info "clean out markdown folder $?"

/usr/bin/zim --export -r --output=markdown --format=markdown --index index "../$name"
info "export to md $?"

cd markdown && /bin/find . -name '*.md' -exec /bin/mv {} ../{} \; && cd ..
info "move md files $?"

[ -d markdown ] && /bin/rm -rf markdown
info "clean out markdown folder $?"

if [ -e readme.md ]
then
    echo >> readme.md
    /bin/cat index.md >> readme.md
    /bin/rm index.md
    info "generate readme.md from index.md $?"
else
    /bin/mv index.md readme.md
    info "rename index.md to readme.md $?"
fi

git add '*.md'
info "git add all md files $?"

