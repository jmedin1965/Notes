#!/bin/sh
#
# An example hook script to verify what is about to be committed.
# Called by "git commit" with no arguments.  The hook should
# exit with non-zero status after issuing an appropriate message if
# it wants to stop the commit.
#
# To enable this hook, rename this file to "pre-commit".

# Redirect output to stderr.
exec 1>&2

info()
{
    echo "pre-commit:" "$@"
}

name="$(/bin/basename "$(pwd)")"

info "cleaning html"
[ -d docs ] && /bin/rm -rf docs
#echo /usr/bin/zim --export --output=./html --format=html --index index "../$name"
#echo /usr/bin/zim --export --output=./html --format=html --index index "../$name" >> out.log
info "generate html docs"
/usr/bin/zim --export -r --output=./docs --format=html --index index "../$name"
info "git add html docs"
git add docs

info "clean out old md files"
/bin/find . -name '*.md' -exec /bin/rm {} \;
info "clean out markdown folder"
[ -d markdown ] && /bin/rm -rf markdown
info "export to md"
/usr/bin/zim --export -r --output=markdown --format=markdown --index index "../$name"
info "move md files"
cd markdown || exit 1
/bin/find . -name '*.md' -exec /bin/mv {} ../{} \;
cd ..
[ -d markdown ] && /bin/rm -rf markdown
if [ -e readme.md ]
then
    echo >> readme.md
    /bin/cat index.md >> readme.md
    /bin/rm index.md
else
    .bin/mv index.md readme.md
fi
git add '*.md'

